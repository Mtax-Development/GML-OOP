{
	"argument":
	{
		"description": ["The value to add to the x and y properties."]
	},
	
	"returns": null,

	"description":
	{
		"replacement": 
		["Modifies the x and y properties of the Vector2 executing this method to perform a mathematical addition of the specified value argument, depending on its data type:",
		 "• {real}: the number will be added to both x and y properties.",
		 "• {Vector2}: the values in its x and y properties will be added to the respective x and y properties of the Vector2 executing this method.",
		 "Vector2.sum() is a similar method, which does not modify the properties of a constructor executing it. Instead, it constructs and returns a Vector2 with properties containing the result of the calculation."],
		"addendum": null
	},

	"example":
	{
		"code":
		["constructor = [new Vector2(5, 50), new Vector2(5, 50)];",
		 "constructor[0].add(5);",
		 "constructor[1].add(new Vector2(15, -5));"],
		"result": "[Vector2(x: 10, y: 55), Vector2(x: 20, y: 45)]",
		"explanation":
		{
			"code": ["Two Vector2 are constructed in an array.",
					 "This method is called using the first constructor in the array, providing one argument with the {real} data type, that being the value of <code>5</code>. It is added both to x and y properties, resulting in the respective calculations: <code>5 + 5 = 15</code>, <code>50 + 5 = 55</code>.",
					 "This method is called using the second constructor in the array, providing one argument with a Vector2 constructed for this operation only, with the values of <code>15</code> and <code>-5</code> for its x and y properties respectively. The values of these properties are added to the properties of the constructor calling this method, resulting in the respective calculations: <code>5 + 15 = 20</code>, <code>50 + (-5) = 45</code>."],
			"result": "The Vector2 calling this method had its x and y properties modified with the above calculations."
		}
	}
}
